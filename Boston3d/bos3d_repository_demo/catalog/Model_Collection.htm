<!DOCTYPE html>
<head>
    <script src="./css_js/jquery/jquery-3.6.0.slim.min.js"></script>
    <script src="./Config.js"></script>
    <link rel="stylesheet" type="text/css" href="./css_js/metro3d/BOS3D.css">
    <link rel='shortcut icon' href='./images/favicon.ico' type='image/x-icon'/ >
    <title>Model Collection Schema</title>
    </head>

    <body>

 
        <div class="wide_column">
            <div id="banner"><!-- loaded from Config.js. --></div>

            <h1>Boston 3D Model Collection and Catalog</h1>
            
            <div class="fig_right"> 
                <a href="./images/Bos3d_TileGrid_ref.jpg" target="_new"><img class="fig_right" src="./images/city_hall_2005.jpg"></a>
            
            </div>
            <div id="context"><!-- loaded from Config.js. --></div>
       <div id="nav3d"></div>


    <h2>Purpose</h2>
<p> 
    This document explains the basic concepts and purposes of the collection and catalog for users who wish to use or contribute to the model catalog.  

    <h3>Quick Links</h3>
      <ul>
        <li><a href="#overview">Conceptual Overview</a>
        <li><a href="#interop">Interoperability Strategy</a>
        <li><a href="#gdb">Geodatabase Format Collection and Catalog</a>
        <li><a href="#obj">Open Source Format Collection and Catalog</a>
        <li><a href="#datadictionary">Data Dictionary for Model Catalog</a> 
        <li><a href="#status">Model Status Dictionary</a>
        <li><a href="#LOD">Levels of Detail and other Recommendations for Model Structure</a>
    </ul>

<h2 id="overview">A Collection of 3D Models</h2>
<p>
    Although we use the term Buildings when referring to the contents of the model collection and catalog, It is important to conceptualize the collection as being concerned with 3D Models that may represent buildings, building parts, groups of attached buildings, bridges, bridge parts, or free-standing walls. 
</p>
<figure class="fig_middle" >
    <p><img src="./images/city_hall_models.jpg">
<figcaption>The collection can have several models of the same building</figcaption></p>
    </figure>
<p>
The real-world structures represented by models in the collection may exist or may be historical, proposed or completely hypothetical. It is possible to have more than one model for a given structure as observed at different times, created by different modelers at different levels of detail, as shown above.  We won't fight the temptation to call these "Building Models"; But users and contributors should keep in mind that models in this collection do not have a one-to-one relationship with Buildings (though some of them do!).
</p>
<!--
<div class="fig_right">
    <p><img src="./images/kioskx4.jpg" width = "350px">
    <p> From a historian's perspective, 3D models are records of historical observations.  3D scenes, like base maps, can be used to explore the relationships among independent documents.</p>
    </div>
-->
<h2 id="interop"> A Platform for Multidisciplinary Research and Collaboration</h2>
<p>
    A 3D city model is a useful framework for many types of research.  Within the BPDA, applications are focused on urban planning and design review.  In the design and development community, city models are used to understand the present and future context of development alternatives.  People interested in understanding the history of places can use the model collection as a framework for documenting and preserving information about structures that no longer exist or proposals that were never built.  Archivists and librarians will be interested in preserving 3D models of buildings as they currently preserve collections of antique photographs, drawings and ephemera.   From a historian's perspective, 3D models represent historical observations.  The 3D city model, like an old map, can be used to place independent documents in context to discover new information about the history of places.
</p>

<figure class="fig_middle">
    <p><img src="./images/ecosystem.jpg">
    <figcaption>Interoperability strategy accommodates interdisciplinary collaboration. <a href="./images/ecosystem.jpg">Click to enlarge.</a></figcaption>
</figure>

<h2 id="gdb">Geographic Information Systems View of the Model Collection and Catalog</h2>
<p>
    The primary tool used for assembling and managing the model collection is ArcGIS Pro – commercial GIS software by ESRI.  In ArcGIS, 3D models are stored as a data column in a table known as a Geodatabase Feature Class.  Like an ordinary database table a feature class table accommodates text and numeric data fileds. A geodatabase feature class may also include a column representing shapes like lines and polygons or 3D models.  A 3D model in a geodatabase is stored as a Multipatch object which is an arrangement of triangular faces that may be colored or draped with image textures.  The geometry of geodatabase features can be expressed in world-wide coordinate systems.  These capabilities make ArcGIS geodatabases very useful for developing and managing a collection of georeferenced 3D models.  
</p>
<p>
    Geodatabase feature classes are not an open format and ESRI does not recommend that their geodatabase format be considered as a vehicle for long-term data preservation.  3D modeling tools used by designers and other makers do not work with geodatabase format, nor do they work with coordinate systems that are very broad in extent.  To make the resources accessible to diverse users  the BPDA publishes the model collection with a system of tiled modules in formats that address the needs of non-GIS tools.  You can find a deeper discussion of the tiling scheme and coordinate system on the page <a href="./Tile_Grid.htm">Boston 3D Tile Grid and Coordinate System</a>.
</p>




<div class="fig_right">
    <img class="fig_right" src="./images/geodatabase.jpg">
    <p class="fig_right">Geodatabase Feature Classes segmented by status</p>
</div>
<h2>Geodatabase Downloads</h2>
<p>
    For collaborators who use ArcGIS, the BPDA shares a version of the model collection and catalog as an ESRI file geodatabase that is named with a date-string that identifies the date that it was issued from the model management system.  This naming convention is useful for tagging updated editions of the model collection and for being clear about the baseline for updates. 
</p>
<p>
    <b>Status-Based Segmentation:</b> The 3D model collection is segmented into feature classes so that applications involving the present configuration of buildings are not burdened with models of proposed, demolished, or alternative models.  Each of the feature classes in the BOS3D_Models geodatabase incorporates the same table schema.  The data dictionary is provided, below. 
</p>

<h2 id="obj">Open Format View of the Model Collection and Catalog</h2> 
<h3>Wavefront Object Format</h3>
<p>Long-term archiving and open-source applications (like most web visualization tools) require that 3D models and their attributes be exchanged using open formats.  Most commonly, the <a href="https://www.loc.gov/preservation/digital/formats/fdd/fdd000507.shtml">Wavefront Object format (.OBJ)</a>.  In .obj format, models are files that may be accompanied by a set of shading instructions and potentially folder of image textures.  Our open-format model collection the files related to a building model are packaged in a zip archive that is named with the unique <b>Model_ID</b> that refers to the catalog record for that model. <a href="./Tiled_Terrain.htm">Tiled terrain models</a> are also shared in OBJ format with ground-plan textures. 
</p>

<div class="fig_right">
    <img class="fig_right" src="./images/ModelFinder.jpg">
    <p class="fig_right">Each tile comes with a clickable model-finder map.</p>
</div>
<h2>The Open Format Catalog</h2>
<p>It is very useful to set up tool-chains that involve using and  preserving the identiy and associated attribute information for models.  For example, It will be useful to automate integrity checks and repair of models that have problems that for some reason behave unpredictably in Geodatabase format.  Web or virtual reality developers may want to use a tool-kit like ThreeJS to build scenes for games, or web or virtual reality applications. For these applications, we share the Model Catalog and the Tile Grid as a GeoJson files that contain the 2d footprints of each model and tile, and all of the attributes (see <a href="#datadictionary">the Data Dictionary</a>, below).  Or users who want a the catalog as a simple table can use the Comma-Separated Values version.  
</p><p>
    The open format model catalogs are available for download as <a href="./Tiled_Index.htm#seamless">seamless-city-wide data-sets (GeoJSON or CSV)</a>. 
</p><p>
    Each tile-specific model collection (available through the <a href="./Tiled_Index.htm">clickable tile map</a>) contains a simple javascript application, ModelFinder.htm, that demonstrates the catalog in action.  You will find the GeoJSON file and the CSV format catalog for that tile's models in the <b>Catalog</b> folder. The built-in ModelFinder application works off-line without any need for a web server or the internet.  The open-format model collections are discussed inmore detail onthe page, <a href="./Building_Models.htm">Open Format Model Collection and Catalog</a>. 
</p>

<h2 id="skp">SketchUp Format Model Collection</h2>
<p> The .OBJ format is a simple way of encoding individual models.  But it does not handle layers or nested object hierarchies.  Importing thousands of .OBJ models into a modeling project requires writing a macro.  SketchUp format, while proprietary, is imported by most commercial tools and preserves layering and object hierarchies.  This is why we have chosen to create a set of tiled SketchUp format models for users of commercial 3D modeling tools for a one-click access to the building model collection, tiled terrain and groundplan all in one model.
</p><p>
The SketchUp format models preserve the unique Model_ID as the group name for each building model.  These names are also preserved when importing the SketchUp model into 3DMax and Rhino.)  So users developing automated procedures in those tools will be able to use the CSV or GeoJSON catalog to keep their models connected to attribute information.  Sketchup-format models are discussed in more detailonthe page <a href="./SketchUp_Model.htm">Boston 3D Tiled SketchUp Models</a>
</p>    

<div id="coordsys"><!-- loaded from Config.js. --></div>

<br><hr><br>

    <h2 id="datadictionary">3D Model Attribute Data Dictionary</h2>
    <p>Note: field names have 10 or few characters toretain compatibility with ESRI Shapefile format. </p>

<table class="dictionary">
    <tr>
        <td colspan="2"><b>Real-World Structure Attributes:</b> These are attributes that refer to the real-world structure represented by the model.  Any of these can be left blank or Null if not applicable.  </td>
    </tr>
    <tr>
    <td width="20%"><b>Name</b><br>Text</td>
    <td>The name of the structure.  If the model reflects one phase of a development project, you can mention it here.</td>
    </tr>
    <tr>
    <td><b>Struct_ID</b><br>Text</td>
    <td>If there is a table about structures, this would be a reference to the primary key of that table.</td>
    </tr>
    <tr>
    <td><b>Struct_Type</b><br>Text</td>
    <td>Type of structure. See domain values.  Refers mostly to the physical aspect of the structure.  
    <br>Examples: Building, Bridge</td>
    </tr>
    <tr>
    <td><b>Struct_Use</b><br>Text</td>
    <td>Use of the structure.  More specific than Type.  Refers to the functional aspect of the structure. <br>
        Examples: School, Library, Civic, Residential, Commercial, Subway Headhouse, Bus Shelter</td>
    </tr>
    <tr>
    <td><b>Struct_Lnk</b><br>Text</td>
    <td>A URL that provides more information about the structure.  
        <br>For example, a Wikipedia page or a library branch page.</td>
    </tr>
    <tr>
    <td><b>Project_ID</b><br>Text</td>
    <td>The Project ID in the BPDA’s Article 80 Development log.</td>
    </tr>
    <tr>
    <td><b>ProjectLnk</b><br>Text</td>
    <td>A URL linking model to the BostonPlans landing page for the project if applicable. </td>
    </tr>
</table>
<br>

<table class="dictionary">
    <tr>
        <td colspan="2"><b>Model Attributes: </b>:  Each record in this dataset regards a 3d building model.  The collection of fields described below provide the information for identifying these models and understanding their provenance.  </td>
    </tr>
    <tr>
    <td width="20%"><b>Status</b><br>Text</td>
    <td>A phase in the lifecycle for proposed, built, demolished or renovated structures.  Values of Status are taken from the Status_Code domain (see below)</td>
    </tr>
    <tr>
    <td><b>Appear_Dt</b><br>Date</td>
    <td>Date of the latest observation or document that confirms the current value of Status</td>
    </tr>
    <tr>
    <td><b>AppearSrc</b><br>Text</td>
    <td>The observation or document and the date that established the Appear_Dt.  
        <br>Example: “Building appears finished per NearMap 04/01/2020. “
        </td>
    </tr>
    <tr>
    <td><b>Disapp_Dt</b><br>Date</td>
    <td>When the model would be turned off if a time-slider were used.  Usually the date of the earliest observation that confirms that a structure has been demolished or substantially renovated. In the case of models whose status is “Modified”, this date refers to the date when the modification took place.</td>
    </tr>
    <tr>
    <td><b>DisappSrc</b><br>Text</td>
    <td>The observation or document and the date that established the Appear_Dt.
        <br>Example: “Site is cleared per NearMap 04/01/2020” 
        </td>
    </tr>
</table>
<br>
<table class="dictionary">
    <tr>
        <td colspan="2"><b>Model Attributes:</b>Each record in the catalog regards a 3D model.  The collection of fields described below provide the information for identifying these models and understanding their provenance.</td>
    </tr>
    <tr>
    <td width="20%"><b>Model_ID</b><br>Text</td>
    <td>A unique ID for each model.  The ID is a random arrangement of seven upper-case letters and numerals prefixed with BOS_ . </td>
    </tr>
    <tr>
    <td><b>Model_Cred</b><br>Text</td>
    <td>This short reference to the person or enterprise responsible for creating the model.</td>
    </tr>
    <tr>
    <td><b>Model_Batch</b>Text<br></td>
    <td>A folder within the Archive/ModelWork folder where the original source file can be found. </td>
    </tr>
    <tr>
    <td><b>Model_File</b><br>Text</td>
    <td>Name of the original source file for the model.</td>
    </tr>
    <tr>
    <td><b>Model_Dt</b><br>Date</td>
    <td>Date when the model was created. </td>
    </tr>
    <tr>
    <td><b>ModelNote</b><br>Text</td>
    <td>May describe aspects of the model, such as if it was the product of a split or repair operation or if the model has a problem. </td>
    </tr>
    <tr>
    <td><b>Model_LOD</b><br>Double</td>
    <td>Level of detail.  See table at <a href="#LOD">Levels of Detail</a></td>
    </tr>
    <tr>
    <td><b>Survey_Src</b><br>Text</td>
    <td>The observations that were used for establishing the shape of the model.  Should describe the document or firm and the methodology where possible. 
        <br>Examples:  
        <ul><li>“Photogrammetry by Infotech Spring 2011”
            <li>“Model hand-made from design documents by Sasaki and Associates January 2018"
        </ul>
        </td>
    </tr>
    <tr>
    <td><b>Survey_Dt</b><br>Date</td>
    <td>The date that the model geometry was captured or published.</td>
    </tr>
</table>
<br>

<table class="dictionary">
    <tr>
        <td colspan="2"><b>Model Geometric Attributes:</b>These attributes are automatically generated by the model enrollment process.  These may be recalculated at times to synchronize with new parcels or re-configured tiles or the possibility that models have been moved or re-shaped.</td>
    </tr>
    <tr>
    <td width="20%"><b>Centr_Lat</b>Double<br></td>
    <td>Latitude of the model centroid (2D) in decimal degrees.  Centroid is calculated by ArcGIS using the “Inside” option.</td>
    </tr>
    <tr>
    <td><b>Centr_Lon</b>Double<br></td>
    <td>Longitude of the model  Centroid (2D) in decimal degrees.</td>
    </tr>
    <tr>
    <td><b>Min_El_Ft</b><br>Double</td>
    <td>The lowest elevation of the  model.  This may be below ground. </td>
    </tr>
    <tr>
    <td><b>Max_El_Ft</b><br>Double</td>
    <td>Elevation of the highest point of the model.</td>
    </tr>
    <tr>
    <td>Gnd_El_Ft<b></b><br>Double</td>
    <td>The elevation where the model intersects the ground.  (this measure uses vertices of the 2dfootprint to sample elevations. </td>
    </tr>
    <td><b>Height_Ft</b><br>Double</td>
    <td>The relative height from the Max Elevation of the model to the lowest corner.</td>
    </tr>
    <tr>
    <td><b>Tile_ID</b><br>Text</td>
    <td>ID for the tile that the model centroid falls within. </td>
    </tr>
    <tr>
    <td><b>Parcel_ID</b><br>Text</td>
    <td>The Parcel ID for the parcel that falls under the centroid of the model’s footprint. </td>
    </tr>
    <tr>
    <td><b>Parcel_Lnk</b>Text<br></td>
    <td>A url that opens the Assessor’s web map centered on the parcel that identified by the Parcel_ID.</td>
    </tr>
    <td><b>GoogleLnk</b>Text<br></td>
    <td>A url that brings up an oblique view of the building in Google Streetmap</td>
    </tr>
    <tr>
    <td><b>NearMapLnk</b><br>Text</td>
    <td>A hyperlink that brings up an oblique view of the building in NearMap.  Requires a NearMap login.</td>
    </tr>
    <tr>
    <td><b></b><br></td>
    <td></td>
    </tr>
    <tr>
    <td><b></b><br></td>
    <td></td>
    </tr>
</table>
<br>

<table class="dictionary">
    <tr>
        <td colspan="2"><b>Edit Tracking Fields:</b> Refer to the last edit made on the table row. 
        Useful for auditing and troubleshooting changes.</td>
    </tr>
    <tr>
    <td width="20%"><b>RowInitDt</b>Date<br></td>
    <td>The time stamp for the creation of the table row.  This defaults to the time that the feature class was issued. Automatically generated.</td>
    </tr>
    <tr>
    <td><b>RowInitUsr</b><br>Text</td>
    <td>The username for the person who initialized the row. Automatically generated.</td>
    </tr>
    <tr>
    <td><b>Editor</b><br>Text</td>
    <td>The user name for the person who last edited the record. Automatically generated.</td>
    </tr>
    <tr>
    <td><b>Edit_Dt</b><br>Date</td>
    <td>The timestamp of the last edit. Automatically generated.</td>
    </tr>
    <tr>
    <td><b>Edit_Action</b><br>Text</td>
    <td>Explanation of the last edit.</td>
    </tr>
    <tr>
    <td><b></b><br></td>
    <td></td>
    </tr>
</table>

<br><hr><br>

<h2 id="status">Model Status Domain</h2>
<p>The Model Status attribute is a category scheme that reflects the life-cycle state of the the building or proposal that the model represents.  This field controls when the model is rendered in applications.. 
</p>
<p>In the Geodatabase view, the collection is segmented into feature classes according to the value of Status.  
<table class="dictionary">
    <tr>
    <td width="20%"><b>Status</b></td>
    <td width="20%"><b>Feature Class</b></td>
    <td width="60%"><b>Description</b></td>
    </tr>
    <tr>
        <td><b>Prefile</b></td>
        <td>Proposed</td>
        <td>Submitted to the Article 80 process but not yet a complete application.</td>
    </tr>
    <tr>
        <td><b>Under Review</b></td>
        <td>Proposed</td>
        <td>The model represents a scenario that has been officially proposed.</td>
    </tr>
    <tr>
        <td><b>Permitted</b></td>
        <td>Proposed</td>
        <td>The building project has been given construction permits. </td>
    </tr>
    <tr>
        <td><b>Under Construction</b></td>
        <td>Active</td>
        <td>The foundation (or more) of the new building is visible.</td>
    </tr>
    <tr>
        <td><b>Current</b></td>
        <td>Active</td>
        <td>The building exterior is finished.  Note that some models that achieve active status are hand-made models of proposed buildings.  These will be in the Active feature class until measured models become available.</td>
    </tr>
    <tr>
        <td><b>Construction Complete</b></td>
        <td>Proposed</td>
        <td>The status value for models of finished projects after they have been replaced by measured as-built models.  These are returned to the Proposed feature class. </td>
    </tr>
    <tr>
        <td><b>Approved Demo</b></td>
        <td>Active</td>
        <td>The model should not be rendered when portraying Approved projects.  The building still exists according to the latest observation. 
        </td>
    </tr>
    <tr>
        <td><b>Permitted Demo</b></td>
        <td>Active</td>
        <td>The model should not be rendered when portraying Permitted projects.  The building still exists according to the latest observation. </td>
    </tr>
    <tr>
        <td><b>Modified</b></td>
        <td>History</td>
        <td>Model has been partially replaced in the Active collection because the real-world structure(s) represented have been substantially modified due to renovation or demolition of attached structures. The replacement model may be a revised version of this one, which has pieces cut out of it to make room for the models of new buildings or building parts.  </td>
    </tr>
    <tr>
        <td><b>Demolished</b></td>
        <td>History</td>
        <td>A model that has been completely replaced in the Active collection because the real-word structure has been demolished. </td>
    </tr>
    <tr>
        <td><b>Fiction</b></td>
        <td>Alt</td>
        <td>The model represents a completely fictitious scenario not an official proposal </td>
    </tr>
    <tr>
        <td><b>Alt-Status</b></td>
        <td>Alt</td>
        <td>The alt feature class holds models that represent buildings that are of a different level of detail or for some reason redundant with other models of the same structure in the Active feature class. These can have any status value pre-pended with <b>Alt-</b></td>
    </tr>
</table>

    <br><hr><br>
    <h2 id="models">Guidelines for 3D Model Structure and Level of Detail</h2> 
    <p>
        The architecture of this schema, where we use one Multipatch or .Obj file to represent a building, bridge or wall is well suited to handling well-structured mesh objects that represent only the exterior shell of the structure.  It is preferable that the mesh be a closed “solid” that has all of its faces oriented toward to outside.  Within this guideline, there are many possibilities for levels of detail – as listed in the table below.  
    </p>
    <ul>
    <li>    Models that are not closed or represent details with single faces are problematic as Mulltipatches and can behave unpredictably with regard to shading, importing, and exporting.
    <li>    We are unable to publish models that incorporate textures or materials at this time. We may be able to represent these as multipatches, but the textures or materials will have to come off when the models are exported to Sketchup or OBJ.  This is an issue that we hope to address in coming revisions. 
    <li>    Level of detail 3 is preferred.  If models of building shells may be divided when building parts have distinct functions, like parking structures.  Or when parts have different construction dates.
    <li>    Models of LOD 4 or greater require a lot of work to assimilate and may be impossible to clean up to the point of working with our system. 
    </ul>    
    
    
    <h2 id="LOD">3D Model Levels of Detail </h2>
    <p>These levels of detail are compatible with the CityGML LOD scheme but are sub-divided according to the types of rough massing models that we commonly see shared by architects and hobbyists who share models onsites like 3D Warehouse.
    </p>
    <table class="dictionary">
        <tr>
          <th>Code</th>
          <th>Description</th>
         </tr>
          <tr>
          <td>LOD 0</td>
          <td>Polygon Footprint</td>
         </tr>
         <tr>
            <td>LOD 1</td>
            <td>Extruded Polygon Footprint</td>
           </tr>
           <tr>
            <td><p>LOD 1.5</p></td>
            <td>Massing model made from extruded roof prints when a structure with parts that have different heights</td>
           </tr>
           <tr>
            <td><p>LOD 2</p></td>
            <td><p>3D roof detail, extruded to the ground along drip-line.</p></td>
           </tr>
           <tr>
            <td>LOD 3</p></td>
            <td>Model portrays undercuts where appropriate. E.g. entryways, porticos or arcades.</td>
           </tr>
           <tr>
            <td>LOD 3.25</td>
            <td>Architectural details indicated by materials or image textures.</td>
           </tr>
           <tr>
            <td>LOD 3.5</td>
            <td>3.5	Building model expresses location of windows and entryways as 3D indentations</td>
           </tr>
           <td>LOD 4</td>
           <td>Model is divided horizontally as individual stories</td>
        </tr>
        <td>LOD 4.5</td>
        <td>Model divides interior spaces: rooms or zones.</td>
        </tr>
        </table>
    
<!-- Below here is part of template-->
<div id="disclaimer"> <!-- filled in by Config.js --></div>
</body>
</html>